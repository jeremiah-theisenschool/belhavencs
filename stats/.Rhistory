abline(v = m, col = "red")
print(m)
sd(ncbirths$weight)
m=mean(ncbirths$weight)
s=sd(ncbirths$weight)
hist(ncbirths$weight)
abline(v = m, col = "red")
abline(v = m-s, col = "forestgreen")
abline(v = m+s, col = "forestgreen")
tinytex::install_tinytex()
hist(hsb2$math, xlab="Math Scores", main="Distribution of Math Scores" )
names(hsb2)
names(hsb2)
names(hsb2)
hsb2 = read.csv("https://github.com/TienChih/tbil-stats/raw/main/data/hsb2.csv")
names(hsb2)
hsb2 = read.csv("https://github.com/TienChih/tbil-stats/raw/main/data/hsb2.csv")
names(hsb2)
hsb2 = read.csv("https://github.com/TienChih/tbil-stats/raw/main/data/hsb2.csv")
names(hsb2)
hsb2 = read.csv("https://github.com/TienChih/tbil-stats/raw/main/data/hsb2.csv")
names(hsb2)
plot(hsb2$read, hsb2$math, xlab="Reading Score ", ylab="Math Score ", pch=10)
hsb2 = read.csv("https://github.com/TienChih/tbil-stats/raw/main/data/hsb2.csv")
names(hsb2)
plot(hsb2$read, hsb2$math, xlab="Reading Score ", ylab="Math Score ", pch=10)
hist(hsb2$science, xlab="Science Scores", main="Distribution of Science Scores" )
hist(hsb2$math, xlab="Math Scores", main="Distribution of Math Scores", freq=FALSE )
hist(hsb2$math, xlab="Math Scores", main="Distribution of Math Scores" )
mean(ncbirths$weight)
m=mean(smoke$weight)
smoke=subset(ncbirths, habit=="smoker")
m=mean(smoke$weight)
md=median(smoke$weight)
hist(smoke$weight)
abline(v = m, col = "red")
abline(v = md, col = "blue")
print(m)
print(md)
name(ncbirths)
ncbirths = read.csv("https://github.com/TienChih/tbil-stats/raw/main/data/ncbirths.csv")
names(ncbirths)
marital=subset(ncbirths, marital="true")
marital=subset(ncbirths, marital)
marital=subset(ncbirths, marital="married")
marital=subset(ncbirths, marital=="married")
m=mean(marital$weight)
md=median(marital$weight)
hist(marital$weight)
abline(v = m, col = "red")
abline(v = md, col = "blue")
print(m)
print(md)
m=mean(smoke$weight)
md=median(smoke$weight)
hist(smoke$weight)
abline(v = m, col = "red")
abline(v = md, col = "blue")
print(m)
print(md)
m=mean(ncbirths$mage)
hist(ncbirths$mage)
abline(v = m, col = "red")
md=median(ncbirths$weight)
m=mean(ncbirths$weight)
hist(ncbirths$weight)
abline(v = md, col = "blue")
abline(v = m, col ='red')
md=median(ncbirths$weight)
m=mean(ncbirths$weight)
hist(ncbirths$weight)
abline(v = md, col = "blue")
abline(v = m, col ='red')
print(md)
print(m)
md=median(ncbirths$weight)
m=mean(ncbirths$weight)
hist(ncbirths$weight)
abline(v = md, col = "blue")
abline(v = m, col ='red')
print(m)
print(md)
m=mean(smoke$weight)
md=median(smoke$weight)
hist(smoke$weight)
abline(v = m, col = "red")
abline(v = md, col = "blue")
print(m)
print(md)
m=mean(marital$weight)
md=median(marital$weight)
hist(marital$weight)
abline(v = m, col = "red")
abline(v = md, col = "blue")
print(m)
print(md)
m=mean(marital$weight)
md=median(marital$weight)
hist(marital$weight)
abline(v = m, col = "red")
abline(v = md, col = "blue")
print(m)
print(md)
hist(ncbirths$weeks)
sd(ncbirths$weeks)
sd(ncbirths$mage)
m=mean(ncbirths$mage)
s=sd(ncbirths$mage)
hist(ncbirths$mage)
abline(v = m, col = "red")
abline(v = m-s, col = "forestgreen")
abline(v = m+s, col = "forestgreen")
print(median(4, 6, 9, 12, 13, 16, 19, 23, 25, 26, 31, 32, 33, 37, 40, 42, 43, 47, 48, 49))
print(median(4, 6, 9, 12, 13, 16, 19, 23, 25, 26, 31, 32, 33, 37, 40, 42, 43, 47, 48, 49))
print(median(4, 6, 9, 12, 13, 16, 19, 23, 25, 26, 31, 32, 33, 37, 40, 42, 43, 47, 48, 49))
print(median(4, 6, 9, 12, 13, 16, 19, 23, 25, 26, 31, 32, 33, 37, 40, 42, 43, 47, 48, 49))
Q = c(4, 6, 9, 12, 13, 16, 19, 23, 25, 26, 31, 32, 33, 37, 40, 42, 43, 47, 48, 49)
Q3 = median(Q)
print(Q3)
h1 = c(4, 6, 9, 12, 13, 16, 19, 23, 25, 26)
h2 = c(31, 32, 33, 37, 40, 42, 43, 47, 48, 49)
Q1 = median(h1)
Q3 = median(h2)
print(Q1)
print(Q2)
Q = c(4, 6, 9, 12, 13, 16, 19, 23, 25, 26, 31, 32, 33, 37, 40, 42, 43, 47, 48, 49)
Q2 = median(Q)
print(Q2)
h1 = c(4, 6, 9, 12, 13, 16, 19, 23, 25, 26)
h2 = c(31, 32, 33, 37, 40, 42, 43, 47, 48, 49)
Q1 = median(h1)
Q3 = median(h2)
print(Q1)
print(Q2)
print(Q3)
h1 = c(4, 6, 9, 12, 13, 16, 19, 23, 25, 26)
h2 = c(31, 32, 33, 37, 40, 42, 43, 47, 48, 49)
Q1 = median(h1)
Q3 = median(h2)
print(Q1)
print(Q2)
print(Q3)
m=mean(marital$weight)
md=median(marital$weight)
hist(marital$weight)
abline(v = m, col = "red")
abline(v = md, col = "blue")
print(m)
print(md)
hist(ncbirths$weeks)
Q2 = median(a1)
a1 = c(0 1 2 2 2 2 3 5 5 5 5 8 8 8 9 11 12 12 14 15 19 41 45 52 62 66 85 96)
a1 = c(0, 1, 2, 2, 2, 2, 3, 5, 5, 5, 5, 8, 8, 8, 9, 11, 12, 12, 14, 15, 19, 41, 45, 52, 62, 66, 85, 96)
Q2 = median(a1)
Q2 = median(a1)
print(Q2)
h1 = c(0, 1, 2, 2, 2, 2, 3, 5, 5, 5, 5, 8, 8, 8)
h2 = c(9, 11, 12, 12, 14, 15, 19, 41, 45, 52, 62, 66, 85, 96)
Q1 = median(h1)
Q2 = median(a1)
Q3 = median(h2)
min = 0
max = 96
print(Q1)
print(Q2)
print(Q3)
print(min)
print(max)
h1 = c(0, 1, 2, 2, 2, 2, 3, 5, 5, 5, 5, 8, 8, 8)
h2 = c(9, 11, 12, 12, 14, 15, 19, 41, 45, 52, 62, 66, 85, 96)
Q1 = median(h1)
Q2 = median(a1)
Q3 = median(h2)
min = 0
max = 96
IQR = Q3 - Q1
print(Q1)
print(Q2)
print(Q3)
print(min)
print(max)
print(IQR)
o1 = Q3 + IQR * 1.5
o2 = Q1 - (IQR * 1.5)
o1 = Q3 + IQR * 1.5
o2 = Q1 - (IQR * 1.5)
print(o1)
print(o2)
h1 = c(0, 1, 2, 2, 2, 2, 3, 5, 5, 5, 5, 8, 8, 8)
h2 = c(9, 11, 12, 12, 14, 15, 19, 41, 45, 52, 62, 66, 85, 96)
Q1 = median(h1)
Q2 = median(a1)
Q3 = median(h2)
min = 0
max = 96
IQR = Q3 - Q1
print(Q1)
print(Q2)
print(Q3)
print(min)
print(max)
print(IQR)
a2 = c(0, 1, 2, 2, 2, 2, 3, 5, 5, 5, 5, 8, 8, 8, 9, 11, 12, 12, 14, 15, 19, 41, 45, 52, 62, 66)
a2Q1
a2 = c(0, 1, 2, 2, 2, 2, 3, 5, 5, 5, 5, 8, 8, 8, 9, 11, 12, 12, 14, 15, 19, 41, 45, 52, 62, 66)
a2Q2 = median(a2)
a2 = c(0, 1, 2, 2, 2, 2, 3, 5, 5, 5, 5, 8, 8, 8, 9, 11, 12, 12, 14, 15, 19, 41, 45, 52, 62, 66)
a2Q2 = median(a2)
print(a2Q2)
a2 = c(0, 1, 2, 2, 2, 2, 3, 5, 5, 5, 5, 8, 8, 8, 9, 11, 12, 12, 14, 15, 19, 41, 45, 52, 62, 66)
a2h1 = c(0, 1, 2, 2, 2, 2, 3, 5, 5, 5, 5, 8, 8)
a2h2 = c( 8, 9, 11, 12, 12, 14, 15, 19, 41, 45, 52, 62, 66)
a2Q1 = median(a2h1)
a2Q2 = median(a2)
a2Q3 = median(a2h2)
min = 0
max = 66
print(a2Q1)
print(a2Q2)
print(a2Q3)
print(min)
print(max)
summary(ncbirths$weight)
boxplot(ncbirths$weight)
summary(ncbirths$weight)
boxplot(ncbirths$mage)
summary(ncbirths$mage)
boxplot(ncbirths$weight)
ncbirths = read.csv("https://github.com/TienChih/tbil-stats/raw/main/data/ncbirths.csv")
names(ncbirths)
boxplot(ncbirths$weight~ncbirths$habit)
boxplot(ncbirths$weight~ncbirths$married)
boxplot(ncbirths$weight~ncbirths$habit)
boxplot(ncbirths$weight~ncbirths$marriage)
boxplot(ncbirths$weight~ncbirths$marital)
boxplot(ncbirths$weight~ncbirths$marital)
boxplot(ncbirths$mage~ncbirths$marital)
boxplot(ncbirths$weight~ncbirths$marital)
ncbirths = read.csv("https://github.com/TienChih/tbil-
stats/raw/main/data/ncbirths.csv")
ncbirths = read.csv("https://github.com/TienChih/tbil-stats/raw/main/data/ncbirths.csv")
names(ncbirths)
ncbirths = read.csv("https://github.com/TienChih/tbil-stats/raw/main/data/ncbirths.csv")
names(ncbirths)
print(4)
print(5)
boxplot(ncbirths$weight)
boxplot(ncbirths$weight)
boxplot(ncbirths$weight)
boxplot(ncbirths$weight)
boxplot(ncbirths$weight~ncbirths$marital)
boxplot(ncbirths$weight~ncbirths$marital)
S1=c((1-3),(2-3),(3-3),(4-3),(5-3))
print(S1)
S2=c((1-3)+(2-3)+(3-3)+(4-3)+(5-3))
print(S2)
Orange
names(Orange)
names(Orange)
names(Orange)
Orange
plot(Orange$age, Orange$circumference, main=" Age vs Circumference ", xlab=" Age ", ylab=" circumference ", pch=19)
names(Orange)
print(Orange$Tree)
plot(Orange$age, Orange$circumference, main=" Age vs Circumference ", xlab=" Age ", ylab=" circumference ", pch=19)
hist(Orange$Tree, xlab="FIXME", main="FIXME")
hist(Orange$circumference, xlab="FIXME", main="FIXME")
hist(Orange$circumference, xlab="Circumference", main="Circumference of Orange Trees")
hist(Orange$circumference, xlab="Circumference", main="Circumference of Orange Trees")
names(Orange)
m=mean(Orange$circumference)
md=median(Orange$circumference)
hist(Orange$circumference)
abline(v = m, col = "red")
abline(v = md, col = "blue")
m=mean(Orange$circumference)
md=median(Orange$circumference)
hist(Orange$circumference)
abline(v = m, col = "red")
abline(v = md, col = "blue")
t1 = subset(Orange, Tree=="1")
t1
plot(t1$age, FIXME$circumference, main=" age vs circumference of tree 1 ", xlab=" age ", ylab=" circumference ", pch=19)
plot(t1$age, t1$circumference, main=" age vs circumference of tree 1 ", xlab=" age ", ylab=" circumference ", pch=19)
t1 = subset(Orange, Tree=="1")
t1
plot(t1$age, t1$circumference, main=" age vs circumference of tree 1 ", xlab=" age ", ylab=" circumference ", pch=19)
plot(t1$age, t1$circumference, main=" age vs circumference of tree 1 ", xlab=" age ", ylab=" circumference ", pch=19)
m=mean(Orange$circumference)
s=sd(Orange$circumference)
hist(FOrange$circumference)
m=mean(Orange$circumference)
s=sd(Orange$circumference)
hist(Orange$circumference)
abline(v = m, col = "red")
abline(v = m + s, col = "forestgreen")
abline(v = m - s, col = "forestgreen")
m=mean(Orange$circumference)
md=median(Orange$circumference)
hist(Orange$circumference)
abline(v = m, col = "red")
m=mean(Orange$circumference)
md=median(Orange$circumference)
hist(Orange$circumference)
abline(v = m, col = "red")
abline(v = md, col = "blue")
t1 = subset(Orange, Tree=="1")
t1
plot(t1$age, t1$circumference, main=" age vs circumference of tree 1 ", xlab=" age ", ylab=" circumference ", pch=19)
sd(Orange$circumference)
m=mean(Orange$circumference)
s=sd(Orange$circumference)
hist(Orange$circumference)
abline(v = m, col = "red")
abline(v = m + s, col = "forestgreen")
abline(v = m - s, col = "forestgreen")
m=mean(Orange$circumference)
s=sd(Orange$circumference)
hist(Orange$circumference)
abline(v = m, col = "red")
abline(v = m + s, col = "forestgreen")
abline(v = m - s, col = "forestgreen")
sd(Orange$circumference)
Orange$Tree
Orange$age
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
n=10                #number of die rolls
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
for (i in 1:n){
roll=sample(1:6,1,replace=TRUE)
if (roll==6){
sixes=sixes+1   #increment number of sixes
}
Sixvec[i]=sixes/i #records proportion of sixes so far
}
plot(Sixvec, type="l", ylim=c(0,1)) #plots linegraph of proportion of sixes
abline(h=1/6, col="red", lty=2)     #draw y=1/6 line
n=10                #number of die rolls
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
for (i in 1:n){
roll=sample(1:6,1,replace=TRUE)
if (roll==6){
sixes=sixes+1   #increment number of sixes
}
Sixvec[i]=sixes/i #records proportion of sixes so far
}
plot(Sixvec, type="l", ylim=c(0,1)) #plots linegraph of proportion of sixes
abline(h=1/6, col="red", lty=2)     #draw y=1/6 line
n=10                #number of die rolls
sixes=0             # of sixes rolled so far
for (i in 1:n){
roll=sample(1:6,1,replace=TRUE)
if (roll==6){
sixes=sixes+1   #increment number of sixes
}
Sixvec[i]=sixes/i #records proportion of sixes so far
}
plot(Sixvec, type="l", ylim=c(0,1)) #plots linegraph of proportion of sixes
abline(h=1/6, col="red", lty=2)     #draw y=1/6 line
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
for (i in 1:n){
roll=sample(1:6,1,replace=TRUE)
if (roll==6){
sixes=sixes+1   #increment number of sixes
}
Sixvec[i]=sixes/i #records proportion of sixes so far
}
plot(Sixvec, type="l", ylim=c(0,1)) #plots linegraph of proportion of sixes
abline(h=1/6, col="red", lty=2)     #draw y=1/6 line
n=10000               #number of die rolls
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
for (i in 1:n){
roll=sample(1:6,1,replace=TRUE)
if (roll==6){
sixes=sixes+1   #increment number of sixes
}
Sixvec[i]=sixes/i #records proportion of sixes so far
}
plot(Sixvec, type="l", ylim=c(0,1)) #plots linegraph of proportion of sixes
abline(h=1/6, col="red", lty=2)     #draw y=1/6 line
n=10                #number of die rolls
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
for (i in 1:n){
roll=sample(1:6,1,replace=TRUE)
if (roll==6){
sixes=sixes+1   #increment number of sixes
}
Sixvec[i]=sixes/i #records proportion of sixes so far
}
plot(Sixvec, type="l", ylim=c(0,1)) #plots linegraph of proportion of sixes
abline(h=1/6, col="red", lty=2)     #draw y=1/6 line
n=10                #number of die rolls
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
for (i in 1:n){
roll=sample(1:6,1,replace=TRUE)
if (roll==6){
sixes=sixes+1   #increment number of sixes
}
Sixvec[i]=sixes/i #records proportion of sixes so far
}
plot(Sixvec, type="l", ylim=c(0,1)) #plots linegraph of proportion of sixes
abline(h=1/6, col="red", lty=2)     #draw y=1/6 line
n=10                #number of die rolls
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
for (i in 1:n){
roll=sample(1:6,1,replace=TRUE)
if (roll==6){
sixes=sixes+1   #increment number of sixes
}
}
plot(Sixvec, type="l", ylim=c(0,1)) #plots linegraph of proportion of sixes
abline(h=1/6, col="red", lty=2)     #draw y=1/6 line
n=10                #number of die rolls
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
for (i in 1:n){
roll=sample(1:6,1,replace=TRUE)
if (roll==6){
sixes=sixes+1   #increment number of sixes
}
Sixvec[i]=sixes/i #records proportion of sixes so far
}
n=100               #number of die rolls
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
for (i in 1:n){
roll=sample(1:6,1,replace=TRUE)
if (roll==6){
sixes=sixes+1   #increment number of sixes
}
Sixvec[i]=sixes/i #records proportion of sixes so far
}
plot(Sixvec, type="l", ylim=c(0,1)) #plots linegraph of proportion of sixes
abline(h=1/6, col="red", lty=2)     #draw y=1/6 line
n=10                #number of die rolls
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
for (i in 1:n){
roll=sample(1:6,1,replace=TRUE)
if (roll==6){
sixes=sixes+1   #increment number of sixes
}
Sixvec[i]=sixes/i #records proportion of sixes so far
plot(Sixvec, type="l", ylim=c(0,1)) #plots linegraph of proportion of sixes
abline(h=1/6, col="red", lty=2)     #draw y=1/6 line
roll=sample(1:6,20,replace=TRUE)
roll
loans = read.csv("https://github.com/TienChih/tbil-stats/raw/main/data/loans_full_schema.csv")
names(loans)
n=10                #number of die rolls
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
roll=sample(1:6,1,replace=TRUE)
if (roll==6){
sixes=sixes+1   #increment number of sixes
}
Sixvec[i]=sixes/i #records proportion of sixes so far
}
length(which(loans$application_type=="joint"))
length(which(loans$homeownership=="MORTGAGE"))
length(which(loans$application_type=="joint" & loans$homeownership=="MORTGAGE"))
index = sample(1:nrow(loans), 1000)
samp=loans[index,]
index = sample(1:nrow(loans), 1000)
samp=loans[index,]
names(samp)
table(samp$application_type,samp$homeownership)
length(which(loans$state=="MS"))
length(which(loans$state=="MS" & loans$issue_month=="Jan-2018"))
index = sample(1:nrow(loans), 1000)
samp=loans[index,]
table(samp$state,samp$month)
index = sample(1:nrow(loans), 1000)
samp=loans[index,]
table(samp$state,samp$month)
index = sample(1:nrow(loans), 1000)
samp=loans[index,]
table(samp$state,samp$month)
index = sample(1:nrow(loans), 1000)
samp=loans[index,]
table(samp$state,samp$issue_month)
n=10                #number of die rolls
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
for (i in 1:n){
if (roll==6){
sixes=sixes+1   #increment number of sixes
}
Sixvec[i]=sixes/i #records proportion of sixes so far
}
abline(h=1/6, col="red", lty=2)     #draw y=1/6 line
n=10                #number of die rolls
sixes=0             # of sixes rolled so far
Sixvec=rep(NA, n) #proportion of sixes rolled
roll=sample(1:6,1,replace=TRUE)
if (roll==6){
sixes=sixes+1   #increment number of sixes
}
Sixvec[i]=sixes/i #records proportion of sixes so far
}
n=10                #number of die rolls
sixes=0             # of sixes rolled so far
